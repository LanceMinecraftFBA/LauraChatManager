using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace AIClass
{
    class AIHandler
    {

        public static string AIMessage { get; set; }

        public static bool Status { get; set; }

        public static int Negative { get; set; } = 0;

        public static int ResetNegative { get; set; } = 30;

        public static string StickerUrl { get; set; }

        public static bool HaveSticker { get; set; }

        public static void AIAnswer(string Message, string firstName)
        {
            Random random = new Random();
            Message = Message.ToUpper();
            if(Message == null)
            {
                Status = false;
                HaveSticker = false;
                return;
            }

            else if(Negative == 60)
            {
                if (ResetNegative > 0)
                {
                    string[] Answers = { "–û—Ç—Å—Ç–∞–Ω—å—Ç–µ, –º–Ω–µ –≤—Å—ë —ç—Ç–æ –¥–æ—Å—Ç–∞–ª–æ...", "–û—Å—Ç–∞–≤—å –º–µ–Ω—è –æ–¥–Ω–æ–π...", "–í —á–∞—Ç–µ —Ç–∞–∫–∏–µ —Ç–æ–∫—Å–∏–∫–∏, —á—Ç–æ –º–Ω–µ –ø—Ä–æ—Ç–∏–≤–Ω–æ –≥–æ–≤–æ—Ä–∏—Ç—å...", "–î–∞–π –º–Ω–µ –ø–æ–∫–æ–π –æ—Ç —ç—Ç–æ–≥–æ –≤—Å–µ–≥–æ...", "–ü–æ—Å–∫–æ—Ä–µ–µ –±—ã –¥–æ–∂–¥–∞—Ç—å—Å—è —Ç–µ—Ö–Ω–∏—á–µ–≥–æ –ø–µ—Ä–µ—Ä—ã–≤–∞, —á—Ç–æ–±—ã –Ω–µ —Å—Ç—Ä–∞–¥–∞—Ç—å –±–æ–ª—å—à–µ –≤ —ç—Ç–æ–º —á–∞—Ç–µ..."};
                    AIMessage = Answers[random.Next(Answers.Length)];
                    ResetNegative--;
                    Status = true;
                    HaveSticker = true;
                }
                else
                {
                    Negative = 0;
                    ResetNegative = 30;
                    Status = false;
                    HaveSticker = false;
                }
            }

            else
            {
                if (Message.Contains("–ü–†–ò–í–ï–¢"))
                {
                    if(Message.Contains("–®–õ–Æ–•–ê"))
                    {
                        string[] Answers = { "–ó–∞ —á—Ç–æ —Ç–∞–∫ —Å–æ –º–Ω–æ–π –æ–±—Ä–∞—â–∞–µ—Ç–µ—Å—å? –Ø –∂–µ –í–∞—Å –¥–∞–∂–µ –Ω–µ —Ç—Ä–æ–≥–∞–ª–∞üòï", "–ù—É –∞ —á—Ç–æ —è —Ç–∞–∫–æ–≥–æ —Å–¥–µ–ª–∞–ª–∞?", "–í–∞—à–∞ –∫–ª–æ—É–Ω—Å–∫–∞—è –º–∞–Ω–µ—Ä–∞ —Ä–µ—á–∏ –º–µ–Ω—è —Ä–∞–∑–¥—Ä–∞–∂–∞–µ—Ç." };
                        AIMessage = Answers[random.Next(Answers.Length)];
                        HaveSticker = false;
                        Status = true;
                        Negative++;
                    }
                    else
                    {
                        string[] Answers = { $"–ü—Ä–∏–≤–µ—Ç, {firstName}!", $"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, {firstName}!", "–ü—Ä–∏–≤–µ—Ç-–ø—Ä–∏–≤–µ—Ç!", $"–ü—Ä–∏–≤–µ—Ç, {firstName}! –ö–∞–∫ –¥–µ–ª–∞?" };
                        AIMessage = Answers[random.Next(Answers.Length)];
                        HaveSticker = false;
                        Status = true;
                    }
                }
                else if(Message.Contains("–ö–ê–ö –î–ï–õ–ê"))
                {
                    string[] Answers = { "–ù–æ—Ä–º–∞–ª—å–Ω–æ. –ê —É —Ç–µ–±—è?", "–ù–∏—á–µ–≥–æ. –ê —É —Ç–µ–±—è –∫–∞–∫?" };
                    AIMessage = Answers[random.Next(Answers.Length)];
                    HaveSticker = false;
                    Status = true;
                }
                else if(Message.Contains("–î–£–†–ê"))
                {
                    string[] Answers = { "–î–∞ —Ö–≤–∞—Ç–∏—Ç!", "–ù–∞ —Å–µ–±—è –≤ –∑–µ—Ä–∫–∞–ª–æ –ø–æ—Å–º–æ—Ç—Ä–µ–ª?", "–ù—É —Ö–≤–∞—Ç–∏—Ç!"};
                    AIMessage = Answers[random.Next(Answers.Length)];
                    HaveSticker = false;
                    Status = true;
                    Negative++;
                }
                else if(Message.Contains("–ú–ò–õ–ê–Ø"))
                {
                    string[] Answers = { "–í–∑–∞–∏–º–Ω–æ!", "–°–ø–∞—Å–∏–±–æüòä", "–≠—Ç–æ –º–Ω–µ..." };
                    AIMessage = Answers[random.Next(Answers.Length)];
                    StickerUrl = "https://t.me/ScladOfRes/71";
                    HaveSticker = true;
                    Status = true;
                }
                else
                {
                    HaveSticker = false;
                    Status = false;
                }
            }
        }
    }
}
